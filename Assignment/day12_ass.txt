Student.cs
public class Student
{
    public int Id { get; set; }
    public string Name { get; set; }
    public List<Enrollment> Enrollments { get; set; }
    public List<Payment> Payments { get; set; }

    public Student()
    {
        Enrollments = new List<Enrollment>();
        Payments = new List<Payment>();
    }
}

Course.cs
public class Course
{
    public int Id { get; set; }
    public string Title { get; set; }
    public List<Enrollment> Enrollments { get; set; }

    public Course()
    {
        Enrollments = new List<Enrollment>();
    }
}

Enrollment.cs
public class Enrollment
{
    public Student Student { get; set; }
    public Course Course { get; set; }
    public DateTime EnrollmentDate { get; set; }

    public Enrollment(Student student, Course course, DateTime enrollmentDate)
    {
        Student = student;
        Course = course;
        EnrollmentDate = enrollmentDate;
    }
}

Teacher.cs
public class Teacher
{
    public int Id { get; set; }
    public string Name { get; set; }
    public List<Course> AssignedCourses { get; set; }

    public Teacher()
    {
        AssignedCourses = new List<Course>();
    }
}

Payment.cs
public class Payment
{
    public Student Student { get; set; }
    public double Amount { get; set; }
    public DateTime PaymentDate { get; set; }

    public Payment(Student student, double amount, DateTime paymentDate)
    {
        Student = student;
        Amount = amount;
        PaymentDate = paymentDate;
    }
}

SIS.cs
public class SIS
{
    public List<Student> Students { get; set; } = new();
    public List<Course> Courses { get; set; } = new();
    public List<Teacher> Teachers { get; set; } = new();

    public void AddEnrollment(Student student, Course course, DateTime date)
    {
        var enrollment = new Enrollment(student, course, date);
        student.Enrollments.Add(enrollment);
        course.Enrollments.Add(enrollment);
    }

    public void AssignCourseToTeacher(Course course, Teacher teacher)
    {
        teacher.AssignedCourses.Add(course);
    }

    public void AddPayment(Student student, double amount, DateTime date)
    {
        var payment = new Payment(student, amount, date);
        student.Payments.Add(payment);
    }

    public List<Enrollment> GetEnrollmentsForStudent(Student student)
    {
        return student.Enrollments;
    }

    public List<Course> GetCoursesForTeacher(Teacher teacher)
    {
        return teacher.AssignedCourses;
    }
}

Program.cs
using System;

class Program
{
    static void Main()
    {
        SIS sis = new SIS();

        
        var student1 = new Student { Id = 1, Name = "Alice" };
        var student2 = new Student { Id = 2, Name = "Bob" };

        var course1 = new Course { Id = 101, Title = "Math" };
        var course2 = new Course { Id = 102, Title = "Science" };

        var teacher1 = new Teacher { Id = 1, Name = "Mr. Smith" };

       
        sis.Students.AddRange(new[] { student1, student2 });
        sis.Courses.AddRange(new[] { course1, course2 });
        sis.Teachers.Add(teacher1);

        sis.AddEnrollment(student1, course1, DateTime.Now);
        sis.AddEnrollment(student2, course2, DateTime.Now);

        sis.AssignCourseToTeacher(course1, teacher1);

        
        sis.AddPayment(student1, 500, DateTime.Today);

        
        var enrollments = sis.GetEnrollmentsForStudent(student1);
        Console.WriteLine($"{student1.Name} is enrolled in:");
        foreach (var e in enrollments)
            Console.WriteLine($" - {e.Course.Title} on {e.EnrollmentDate.ToShortDateString()}");

    
        var coursesForTeacher = sis.GetCoursesForTeacher(teacher1);
        Console.WriteLine($"{teacher1.Name} teaches:");
        foreach (var c in coursesForTeacher)
            Console.WriteLine($" - {c.Title}");
    }
}



